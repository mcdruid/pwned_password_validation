<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
const API_URL = 'https://haveibeenpwned.com/api/v2/pwnedpassword/';

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function pwned_password_validation_form_user_login_form_alter(&$form) {
  $form['#submit'][] = 'pwned_password_validation_user_login_form_submit';
}

/**
 * @param $form
 * @param FormStateInterface $form_state
 */
function pwned_password_validation_user_login_form_submit($form, FormStateInterface $form_state) {
  if (isset($form_state->getUserInput()['pass'])) {
    $hash = hash('sha1', $form_state->getUserInput()['pass']);


    $result = Drupal::httpClient()->get(API_URL . $hash, ['http_errors' => FALSE]);

    if ($result->getStatusCode() == 200) {
      $user_profile_edit = Url::fromRoute('entity.user.edit_form', [
        'user' => Drupal::currentUser()->id(),
      ])->toString();

      drupal_set_message(t('The password you are using on this site has ' .
        'previously appeared in a data breach of another site. ' .
        '<strong>This is not related to a security incident on this site</strong>, ' .
        'however the fact that it has previously appeared elsewhere puts your ' .
        'account at risk. You should consider ' .
        '<a href="@user_profile_edit">changing your password</a> on this site ' .
        'as well as on any other site you may have used it.', [
        '@user_profile_edit' => $user_profile_edit,
      ]), 'warning');
    }
  }
}
